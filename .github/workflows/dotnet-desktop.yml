name: .NET CI

on:
  push:
    branches:
      - main
      - release
      - develop
      - feature/**
      - bugfix/**

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    env:  # Setting environment variable at the job level
      OPENAI_KEY: ${{ secrets.OPENAI_KEY }}  # Accessing the secret and assigning it to an environment variable

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x' # Adjust the version as necessary

      - name: Run another one-line script
        run: echo Hello, ${{ vars.PUBLISH_NUGET }}!     

      - name: Restore dependencies
        run: dotnet restore OpenAI.sln

      - name: Build Solution
        run: dotnet build OpenAI.sln --configuration Release --no-restore

      - name: Run Tests
        run: python -c "import os; os.system('dotnet test OpenAI.sln --configuration Release --no-build --verbosity normal  --logger trx');"  

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        with:
          name: 'Test Results'
          path: '**/TestResults/**/*.trx'
          reporter: 'dotnet-trx'

  package:
    name: Package
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x' # Adjust the version as necessary

      - name: Restore dependencies
        run: dotnet restore OpenAI.sln
  
      - name: Build Solution
        run: dotnet build OpenAI.sln --configuration Release --no-restore          

      - name: Pack
        run: dotnet pack ConnectingApps.Refit.OpenAI/ConnectingApps.Refit.OpenAI.csproj --configuration Release --no-build -o out

      - name: Find package file
        run: find | grep 'nupkg'       

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuget-package
          path: out/*.nupkg

      - name: Publish to NuGet
        if: ${{ vars.PUBLISH_NUGET == 'true' }} # Conditional execution based on PUBLISH_NUGET environment variable
        run: dotnet nuget push "out/*.nupkg" --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json       
